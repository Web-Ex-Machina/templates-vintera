<?php

namespace Contao;

if ($GLOBALS['TL_CONFIG']['useRTE']):

// Use document.write() here in case TinyMCE is loaded in a subpalette (see #1424)
?>
<script>window.tinymce || document.write('<script src="<?= $this->asset('js/tinymce.min.js', 'contao-components/tinymce4') ?>">\x3C/script>')</script>
<script>
window.tinymce && tinymce.init({
  selector: '#<?= $this->selector ?>',
  min_height: 336,
  language: '<?= Backend::getTinyMceLanguage() ?>',
  element_format: 'html',
  document_base_url: '<?= Environment::get('base') ?>',
  entities: '160,nbsp,60,lt,62,gt,173,shy',
  branding: false,
  promotion: false,
  skin: (document.documentElement.dataset.colorScheme === 'dark' ? 'tinymce-5-dark' : 'tinymce-5'),
  setup: function(editor) {
    editor.getElement().removeAttribute('required');
    document.querySelectorAll('[accesskey]').forEach(function(el) {
      editor.addShortcut('access+' + el.accessKey, el.id, () => el.click());
    });
  },
  init_instance_callback: function(editor) {
    if (document.activeElement && document.activeElement.id && document.activeElement.id == editor.id) {
      editor.editorManager.get(editor.id).focus();
    }
    editor.on('focus', () => window.dispatchEvent(new Event('store-scroll-offset')));
  },

  <?php $this->block('picker'); ?>
    file_picker_callback: function(callback, value, meta) {
      Backend.openModalSelector({
        'id': 'tl_listing',
        'title': document.getElement('.tox-dialog__title').get('text'),
        'url': Contao.routes.backend_picker + '?context=' + (meta.filetype == 'file' ? 'link' : 'file') + '&amp;extras[fieldType]=radio&amp;extras[filesOnly]=true&amp;extras[source]=<?= $this->source ?>&amp;value=' + value + '&amp;popup=1',
        'callback': function(table, val) {
          document.getElement('.tox-dialog input')?.focus();
          callback(val.join(','));
        }
      });
    },
    file_picker_types: '<?= $this->fileBrowserTypes ?>',
  <?php $this->endblock(); ?>

  <?php $this->block('content_css'); ?>
    content_css: document.documentElement.dataset.colorScheme === 'dark' ? '<?= $this->asset('tinymce-dark.css', 'system/themes/'.Backend::getTheme()) ?>' :  '<?= $this->asset('tinymce.css', 'system/themes/'.Backend::getTheme()) ?>',
  <?php $this->endblock(); ?>

  <?php $this->block('plugins'); ?>
    plugins: 'autosave charmap code fullscreen image importcss link lists searchreplace stripnbsp table visualblocks visualchars',
  <?php $this->endblock(); ?>

  <?php $this->block('valid_elements'); ?>
    extended_valid_elements: 'q[cite|class|title],article,section,hgroup,figure,figcaption',
  <?php $this->endblock(); ?>

  <?php $this->block('menubar'); ?>
    menubar: 'file edit insert view format table',
  <?php $this->endblock(); ?>

  <?php $this->block('toolbar'); ?>
    toolbar: 'link unlink | image | blocks | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | code',
  <?php $this->endblock(); ?>

  <?php $this->block('contextmenu'); ?>
    contextmenu: false,
  <?php $this->endblock(); ?>

  <?php $this->block('paste_data_images'); ?>
    paste_data_images: false,
  <?php $this->endblock(); ?>

  <?php $this->block('cache_suffix'); ?>
    cache_suffix: '?v=<?= $this->assetVersion('js/tinymce.min.js', 'contao-components/tinymce4') ?>',
  <?php $this->endblock(); ?>

  <?php $this->block('custom'); ?>
  <?php $this->endblock(); ?>

  <?php if ($this->readonly): ?>
    readonly: true,
  <?php endif; ?>

  browser_spellcheck: true,
  importcss_append: true,
  link_class_list: [
    {title: 'None', value: ''},
    {title: 'Button',
      menu:[
        {title: 'Normal',  
          menu:[
            {title : 'Background',
              menu: [
               {title: 'btn-bg-primary',   value:'btn-bg-primary'},
               {title: 'btn-bg-secondary', value:'btn-bg-secondary'},
              ]
            },
            {title : 'Borders'   ,
              menu: [
               {title: 'btn-bd-primary',   value:'btn-bd-primary'},
               {title: 'btn-bd-secondary', value:'btn-bd-secondary'},
              ]
            }
          ]
        },
        {title: 'Small',   
          menu:[
            {title : 'Background',
              menu: [
               {title: 'btn-sm btn-bg-primary',   value:'btn-sm btn-bg-primary'},
               {title: 'btn-sm btn-bg-secondary', value:'btn-sm btn-bg-secondary'},
              ]
            },
            {title : 'Borders'   ,
              menu: [
               {title: 'btn-sm btn-bd-primary',   value:'btn-sm btn-bd-primary'},
               {title: 'btn-sm btn-bd-secondary', value:'btn-sm btn-bd-secondary'},
              ]
            }
          ]
        },
        {title: 'Large',   
          menu:[
            {title : 'Background',
              menu: [
               {title: 'btn-lg btn-bg-primary',   value:'btn-lg btn-bg-primary'},
               {title: 'btn-lg btn-bg-secondary', value:'btn-lg btn-bg-secondary'},
              ]
            },
            {title : 'Borders'   ,
              menu: [
               {title: 'btn-lg btn-bd-primary',   value:'btn-lg btn-bd-primary'},
               {title: 'btn-lg btn-bd-secondary', value:'btn-lg btn-bd-secondary'},
              ]
            }
          ]
        },
        {title: 'Squared', 
          menu:[
            {title : 'Background',
              menu: [
               {title: 'squared btn-bg-primary',   value:'squared btn-bg-primary'},
               {title: 'squared btn-bg-secondary', value:'squared btn-bg-secondary'},
              ]
            },
            {title : 'Borders'   ,
              menu: [
               {title: 'squared btn-bd-primary',   value:'squared btn-bd-primary'},
               {title: 'squared btn-bd-secondary', value:'squared btn-bd-secondary'},
              ]
            }
          ]
        },
      ]
    },
  ]
});
</script>
<?php endif; ?>
